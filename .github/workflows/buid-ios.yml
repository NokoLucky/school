name: Build iOS (Unsigned IPA)

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Keep using Node 18, but we'll handle the OpenSSL issue

      - name: Install Ionic and dependencies
        run: |
          npm install -g @ionic/cli
          npm install --legacy-peer-deps

      - name: Install missing dependencies
        run: |
          npm install @ionic-native/core@latest @ionic-native/splash-screen@latest --legacy-peer-deps

      - name: Build Ionic app (without openssl-legacy-provider)
        run: |
          # Remove the problematic flag and use alternative approaches
          ionic build --prod

      - name: Sync Capacitor
        run: |
          npx cap sync ios

      - name: Build iOS archive (unsigned)
        run: |
          cd ios/App
          # Create an export options plist for an unsigned archive
          cat <<EOF > exportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key><string>development</string>
              <key>signingStyle</key><string>manual</string>
              <key>compileBitcode</key><false/>
          </dict>
          </plist>
          EOF

          xcodebuild -scheme App -configuration Release -sdk iphoneos \
            -archivePath build/App.xcarchive archive CODE_SIGNING_ALLOWED=NO

          xcodebuild -exportArchive \
            -archivePath build/App.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build

      - name: Upload unsigned IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: ios/App/build/**/*.ipa